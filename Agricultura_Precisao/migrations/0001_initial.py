# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-02 10:15
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appkey',
            fields=[
                ('appkeyid', models.AutoField(db_column='appKeyId', primary_key=True, serialize=False)),
                ('appkey', models.CharField(db_column='appKey', max_length=100, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'appkey',
            },
        ),
        migrations.CreateModel(
            name='Communicationtype',
            fields=[
                ('idtype', models.AutoField(db_column='idType', primary_key=True, serialize=False)),
                ('typecommunicationname', models.CharField(db_column='typeCommunicationName', max_length=50, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'communicationtype',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sensorid', models.AutoField(db_column='sensorId', primary_key=True, serialize=False)),
                ('status', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sensor',
            },
        ),
        migrations.CreateModel(
            name='Sensorval',
            fields=[
                ('sensorvalid', models.AutoField(db_column='sensorValID', primary_key=True, serialize=False)),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'sensorval',
            },
        ),
        migrations.CreateModel(
            name='Standardparameter',
            fields=[
                ('standardid', models.AutoField(db_column='standardId', primary_key=True, serialize=False)),
                ('defaultmax', models.FloatField(db_column='defaultMax')),
                ('defaultmin', models.FloatField(db_column='defaultMin')),
                ('typeharvest', models.CharField(db_column='typeHarvest', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'standardparameter',
            },
        ),
        migrations.CreateModel(
            name='Typesensor',
            fields=[
                ('typesensorid', models.AutoField(db_column='typeSensorId', primary_key=True, serialize=False)),
                ('typesensorname', models.CharField(db_column='typeSensorName', max_length=40)),
                ('sensornamelib', models.CharField(db_column='sensorNameLib', max_length=40)),
                ('maxval', models.FloatField(db_column='maxVal')),
                ('minval', models.FloatField(db_column='minVal')),
            ],
            options={
                'managed': False,
                'db_table': 'typesensor',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('iduser', models.AutoField(db_column='idUser', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=45)),
                ('password', models.CharField(db_column='password', max_length=40)),
                ('reference', models.IntegerField(db_column='reference')),
            ],
            options={
                'managed': False,
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Waspmote',
            fields=[
                ('waspmoteid', models.AutoField(db_column='waspmoteId', primary_key=True, serialize=False)),
                ('macaddress', models.CharField(db_column='macAddress', max_length=50, unique=True)),
                ('waspmote_name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'waspmote',
            },
        ),
    ]
